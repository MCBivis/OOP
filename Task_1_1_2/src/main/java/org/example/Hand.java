package org.example;

/**
 * Класс Hand представляет руку игрока в игре.
 */
public class Hand {

    /**
     * Массив карт в руке игрока.
     */
    Card[] cards;

    /**
     * Количество карт в руке.
     */
    int InHand;

    /**
     * Текущий счет игрока (сумма значений карт).
     */
    int score;

    /**
     * Конструктор класса Hand инициализирует пустую руку с нулевым количеством карт и счетом.
     */
    public Hand() {
        cards = new Card[21];  // Массив для хранения до 21 карты
        InHand = 0;  // Количество карт в руке
        score = 0;   // Начальный счет
    }

    /**
     * Метод add() добавляет карту в руку и обновляет счет игрока.
     * Если после добавления карты счет превышает 21, проверяется наличие туза, и его значение может быть изменено с 11 на 1.
     *
     * @param card Карта, которая добавляется в руку.
     */
    public void add(Card card) {
        cards[InHand++] = card;  // Добавляем карту в массив и увеличиваем количество карт в руке
        score += card.value;     // Добавляем значение карты к общему счету
        updateScore();           // Обновляем счет, проверяя возможность изменения значения туза
    }

    /**
     * Метод HandShow() возвращает строковое представление всех карт в руке.
     *
     * @return Строковое представление карт в руке в формате "[карта1, карта2, ...]".
     */
    public String HandShow() {
        String temp = "[";  // Открываем квадратную скобку
        for (int i = 0; i < InHand - 1; i++) {
            temp += cards[i].CardShow() + ", ";  // Добавляем карты через запятую
        }
        temp += cards[InHand - 1].CardShow();    // Добавляем последнюю карту
        return temp + "]";  // Закрываем квадратную скобку и возвращаем строку
    }

    /**
     * Метод HandShow(int hidden) возвращает строковое представление карт в руке с одной скрытой картой.
     *
     * @param hidden Параметр, означающий необходимость скрыть последнюю карту.
     * @return Строковое представление карт в формате "[карта1, закрытая карта]".
     */
    public String HandShow(int hidden) {
        String temp = "[";  // Открываем квадратную скобку
        for (int i = 0; i < InHand - 1; i++) {
            temp += cards[i].CardShow() + ", ";  // Добавляем открытые карты
        }
        temp += "<закрытая карта>";  // Последняя карта скрыта
        return temp + "]";  // Закрываем квадратную скобку и возвращаем строку
    }

    /**
     * Метод updateScore() обновляет счет, если значение превышает 21, и изменяет значение туза с 11 на 1.
     */
    private void updateScore() {
        for (int i = 0; i < InHand; i++) {
            // Если сумма больше 21 и в руке есть туз (сейчас его значение 11), меняем его значение на 1
            if (score > 21 && cards[i].value == 11) {
                cards[i].value = 1;
                score -= 10;  // Уменьшаем счет на 10, чтобы учесть новое значение туза
            }
        }
    }
}